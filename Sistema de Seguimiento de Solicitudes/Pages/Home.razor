@page "/"
@using MudBlazor
@inject HttpClient Http

<PageTitle>Home</PageTitle>

<h1>Panel de solicitudes</h1>


<!--
<MudGrid Class="mt-3" Justify="Justify.Center">
<MudItem xs="4" >
<MudPaper Class="p-3 text-center bg-danger text-white">
<h5>@solicitudesRojas Solicitudes</h5>
</MudPaper>
</MudItem>

<MudItem xs="4">
<MudPaper Class="p-3 text-center bg-warning text-dark">
<h5>@solicitudesAmarillas Solicitudes</h5>
</MudPaper>
</MudItem>

<MudItem xs="4">
<MudPaper Class="p-3 text-center bg-success text-white">
<h5>@solicitudesVerdes Solicitudes</h5>
</MudPaper>
</MudItem>
</MudGrid>
-->

<div class="dashboard-container">
    <div class="cards-container">
        <div class="card">
            <h4>2 Solicitudes</h4>
            <p>Estado: Abiertas</p>
        </div>
        <div class="card">
            <h4>5 Solicitudes</h4>
            <p>Estado: En Progreso</p>
        </div>
        <div class="card">
            <h4>7 Solicitudes</h4>
            <p>Estado: Cerradas</p>
        </div>
    </div>
</div>

<!--Testeo API-->

@code {
    private string mensaje;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            mensaje = await Http.GetStringAsync("https://localhost:7123/weatherforecast");
        }
        catch (Exception ex)
        {
            mensaje = "Error" + ex.Message;
        }
    }
}

<p>@mensaje</p>


<style>
    .dashboard-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
        padding: 20px;
    }

    .cards-container {
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
        justify-content: center;
    }

    .card {
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 10px;
        text-align: center;
        background-color: #f9f9f9;
        width: 200px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
</style>