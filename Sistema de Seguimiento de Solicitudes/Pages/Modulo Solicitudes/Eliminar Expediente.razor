@page "/Elim/{id?}"

@using SolicitudesShared
@using Sistema_de_Seguimiento_de_Solicitudes.Services
@using CurrieTechnologies.Razor.SweetAlert2

@inject IExpedienteService ExpedienteService
@inject SweetAlertService Swal
@inject NavigationManager NavigationManager


<PageTitle>Eliminar</PageTitle>

<h3>Eliminacion de Expedientes</h3>

<table class="table">
	<thead>
		<tr>
			<th>ID</th>
			<th>FOLIO</th>
			<th>NOMBRE</th>
			<th>FECHA DE INICIO</th>
			<th>ESTATUS</th>
			<th>ELIMINAR</th>
		</tr>	
	</thead>
    <tbody>
        @if (listaExpedientes != null)
        {
            foreach (var expediente in listaExpedientes.OrderByDescending(e => e.Id))
            {
                <tr>
                    <td>@expediente.Id</td>
                    <td>@expediente.Folio</td>
                    <td>@expediente.NombreSolicitante</td>
                    <td>@(expediente.FechaInicio.ToString("dd/MM/yyyy") ?? "N/A")</td>
                    <td>@expediente.Estado</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => Eliminar(expediente.Id)">
                            <i class="bi bi-trash">Eliminar</i>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
	[Parameter]
	public string? Id { get; set; }

	List<ExpedienteDTO>? listaExpedientes = null;


	protected override async Task OnInitializedAsync()
	{
		listaExpedientes = await ExpedienteService.Lista();

		//Genera ID Aleatorio a la ruta
		var randomNumber = new Random().Next(1000, 9999);
		var guidPart = Guid.NewGuid().ToString().Substring(0, 4); // Solo los primeros 4 caracteres
		Id = $"{randomNumber}-{guidPart}";
		NavigationManager.NavigateTo($"/Elim/{Id}");
	}

    private async Task Eliminar(int id)
    {
        var resultado1 = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¿Estás seguro?",
                Text = "¡No podrás revertir esto!",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Sí, continuar",
                CancelButtonText = "Cancelar",
            });

        if (resultado1.IsConfirmed)
        {
            var resultado2 = await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "¿Realmente estás seguro?",
                    Text = "Esta es tu última oportunidad para cancelar.",
                    Icon = SweetAlertIcon.Warning,
                    ShowCancelButton = true,
                    ConfirmButtonText = "Sí, estoy seguro",
                    CancelButtonText = "Cancelar",
                });

            if (resultado2.IsConfirmed)
            {
                var resultado3 = await Swal.FireAsync(new SweetAlertOptions
                    {
                        Title = "¡Confirmación final!",
                        Text = "¿De verdad quieres eliminar este expediente? Esta acción no se puede deshacer.",
                        Icon = SweetAlertIcon.Warning,
                        ShowCancelButton = true,
                        ConfirmButtonText = "Sí, eliminar definitivamente",
                        CancelButtonText = "Cancelar",
                    });

                if (resultado3.IsConfirmed)
                {
                    var eliminado = await ExpedienteService.Eliminar(id);

                    if (eliminado)
                    {
                        await Swal.FireAsync(new SweetAlertOptions
                            {
                                Title = "¡Eliminado!",
                                Text = "El expediente ha sido eliminado.",
                                Icon = SweetAlertIcon.Success,
                            });
                        listaExpedientes = await ExpedienteService.Lista();
                    }
                    else
                    {
                        await Swal.FireAsync(new SweetAlertOptions
                            {
                                Title = "¡Error!",
                                Text = "Ha ocurrido un error al intentar eliminar el expediente.",
                                Icon = SweetAlertIcon.Error,
                            });
                    }
                }
            }
        }
    }
}
